@model RestauranteImplementacionAPI.Models.Login

@{
    Layout = null;
}

<link rel="stylesheet" href="~/css/login.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="wrapper">

    <form method="post">
        <h2>Iniciar sesión</h2>

        <div class="input-field">
            <input type="text" id="Username" name="Username" required autocomplete="off" class="form-control" required />
            <label for="Username">
                <i class="fas fa-user"></i> 
                Nombre de usuario
            </label>
        </div>

        <div class="input-field">
            <input type="password" id="Password" name="Password" class="form-control" required />
            <label for="Password">
                <i class="fas fa-lock"></i> 
                Contraseña
            </label>
        </div>

        <div class="password-checkbox">
            <input type="checkbox" id="showPasswordCheckbox" /> 
            <label for="showPasswordCheckbox">Mostrar contraseña</label>
        </div><br>

        @if (TempData["ErrorMessage"] != null)
        {
            <div id="errorMessage" class="alert">
                @TempData["ErrorMessage"]
            </div>
        }
        <br>
        <button type="submit" class="btn btn-primary">Iniciar sesión</button>
    </form>
    
</div>

<script>
    // Función para mostrar/ocultar la contraseña 
    const showPasswordCheckbox = document.getElementById('showPasswordCheckbox');
    const passwordField = document.getElementById('Password');

    showPasswordCheckbox.addEventListener('change', function () {
        const type = showPasswordCheckbox.checked ? 'text' : 'password';
        passwordField.type = type;
    });

    // Función para ocultar el mensaje de error cuando el usuario comienza a escribir 
    const errorMessage = document.getElementById('errorMessage');
    const inputFields = document.querySelectorAll('input'); 

    inputFields.forEach(input => {
        input.addEventListener('input', function() {
            if (errorMessage) {
                errorMessage.style.display = 'none';
            }
        });
    });
</script>
